sequenceDiagram
    participant Trigger as Scheduler/Manual Trigger
    participant API as API Service
    participant QStash as QStash Orchestrator
    participant Workflow as Workflow Handler
    participant Redis as Redis Cache
    participant LTA as LTA DataMall
    participant DB as PostgreSQL DB
    participant Gemini as Google Gemini AI
    participant Social as Social Media Platforms
    participant Users as End Users

    %% Cars Data Workflow
    Note over Trigger, Social: Cars Data Processing Workflow
    
    Trigger->>+API: POST /workflows/cars
    API->>+QStash: Schedule Cars Workflow
    QStash->>+Workflow: Execute carsWorkflow()
    
    Workflow->>+Redis: Check last_updated:cars timestamp
    Redis-->>-Workflow: Return last update time
    
    Workflow->>+LTA: Download cars CSV file
    LTA-->>-Workflow: Return ZIP file with CSV
    
    Workflow->>Workflow: Validate file checksum
    
    alt File has changes (new checksum)
        Workflow->>Workflow: Extract & parse CSV
        Workflow->>Workflow: Transform data (clean make, vehicle type)
        Workflow->>+DB: Batch insert car records
        DB-->>-Workflow: Insert confirmation
        Workflow->>+Redis: Update last_updated:cars timestamp
        Redis-->>-Workflow: Confirmation
        
        Workflow->>+DB: Get latest month data
        DB-->>-Workflow: Car registration summary
        
        Workflow->>+Gemini: Generate car blog post
        Gemini-->>-Workflow: Generated blog content
        
        Workflow->>+DB: Save blog post
        DB-->>-Workflow: Post saved with slug
        
        Workflow->>+Social: Publish blog announcement
        Social-->>-Workflow: Publishing results
        
    else File unchanged (same checksum)
        Workflow->>Workflow: Skip processing
    end
    
    Workflow-->>-QStash: Return success result
    QStash-->>-API: Workflow completed
    API-->>-Trigger: HTTP 200 response

    %% COE Data Workflow
    Note over Trigger, Social: COE Data Processing Workflow
    
    Trigger->>+API: POST /workflows/coe
    API->>+QStash: Schedule COE Workflow
    QStash->>+Workflow: Execute coeWorkflow()
    
    Workflow->>+Redis: Check last_updated:coe timestamp
    Redis-->>-Workflow: Return last update time
    
    Workflow->>+LTA: Download COE CSV file
    LTA-->>-Workflow: Return ZIP file with CSV
    
    Workflow->>Workflow: Validate file checksum
    
    alt File has changes (new checksum)
        Workflow->>Workflow: Extract & parse CSV
        Workflow->>Workflow: Transform COE data
        Workflow->>+DB: Batch insert COE records
        DB-->>-Workflow: Insert confirmation
        Workflow->>+Redis: Update last_updated:coe timestamp
        Redis-->>-Workflow: Confirmation
        
        Workflow->>+DB: Get latest COE results
        DB-->>-Workflow: COE bidding summary
        
        alt Both bidding exercises complete
            Workflow->>+Gemini: Generate COE blog post
            Gemini-->>-Workflow: Generated blog content
            
            Workflow->>+DB: Save blog post
            DB-->>-Workflow: Post saved with slug
            
            Workflow->>+Social: Publish blog announcement
            Social-->>-Workflow: Publishing results
        end
        
    else File unchanged (same checksum)
        Workflow->>Workflow: Skip processing
    end
    
    Workflow-->>-QStash: Return success result
    QStash-->>-API: Workflow completed
    API-->>-Trigger: HTTP 200 response

    %% Error Handling Flow
    Note over Trigger, Social: Error Handling
    
    alt Workflow Error Occurs
        Workflow->>Workflow: Catch error
        Workflow->>+Social: Send Discord error notification
        Social-->>-Workflow: Notification sent
        Workflow-->>QStash: Return error result
    end

    %% User Access Flow
    Note over Users, DB: User Data Access
    Users->>+API: GET /v1/cars or /v1/coe
    API->>+Redis: Check cache
    alt Cache hit
        Redis-->>-API: Return cached data
    else Cache miss
        API->>+DB: Query fresh data
        DB-->>-API: Return query results
        API->>Redis: Cache results
    end
    API-->>-Users: Return JSON response